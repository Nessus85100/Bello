<?xml version="1.0" encoding="UTF-8"?>
<includes> 

	<include name="BackgroundWeather">
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<imagepath background="true">$INFO[Skin.String(WeatherFanartDir)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<timeperimage>30000</timeperimage>
		  <fadetime>500</fadetime>
		  <randomize>true</randomize>
		  <loop>yes</loop>
			<visible>[Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))] + Window.IsVisible(weather) | StringCompare(Container(20).ListItem.Property(defaultID),weather)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	</include>
	
	<include name="BackgroundContent">
	 <control type="image">
		 <posx>-10</posx>
		 <posy>-10</posy>
		 <width>1300</width>
		 <height>740</height>
		 <aspectratio>stretch</aspectratio>
     <texture background="true">windows/bg/black.jpg</texture>
	 </control>
	 <control type="group">
		<visible>![Player.HasVideo + !Skin.HasSetting(HideBGVideo)]</visible>
		<visible>![Player.HasAudio + [[Skin.HasSetting(Vis-Fanart) + !IsEmpty(Player.Art(fanart))] | Skin.HasSetting(Vis-MusicSlideshow) | Skin.HasSetting(Vis-ArtistSlideshow)]]</visible>
		<control type="image">
			<description>Default Background</description>
			<include>FullscreenDimensions</include>
	    <include>BackgroundFade</include>
			<texture background="true">special://skin/extras/backgrounds/SKINDEFAULT.jpg</texture>
			<visible>![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
			<visible>![Skin.HasSetting(CustomBackground) + ![IsEmpty(Skin.String(CustomFolderBackgroundPath)) | Skin.HasSetting(ShowCustomBackgroundOnHomeOnly)]]</visible>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
    <control type="group">
      <animation type="WindowOpen" reversible="false">
        <effect type="fade" start="0" end="100" time="10350" />
      </animation>
      <animation type="WindowClose" reversible="false">
        <effect type="fade" start="100" end="0" time="350" />
      </animation>
			<visible>Skin.HasSetting(HomeMenuAnimation)</visible>
      <visible>Window.IsVisible(Home) + ![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
      <visible>Window.IsVisible(Home) + ![Skin.HasSetting(CustomBackground) + ![IsEmpty(Skin.String(CustomFolderBackgroundPath)) | Skin.HasSetting(ShowCustomBackgroundOnHomeOnly)]]</visible>
      <control type="image">
        <include>FullscreenDimensions</include>
	      <include>BackgroundFade</include>
        <texture>windows/bg/bokeh1.png</texture>
        <animation type="Conditional" condition="true" pulse="true" reversible="false">
          <effect type="fade" start="0" end="70" time="10350" />
        </animation>
      </control>
      <control type="image">
        <include>FullscreenDimensions</include>
	      <include>BackgroundFade</include>
				<texture>windows/bg/bokeh2.png</texture>
        <animation type="Conditional" condition="true" pulse="true" reversible="false">
          <effect type="fade" start="0" end="70" time="10350" delay="10350"/>
				</animation>
      </control>
      <control type="image">
        <include>FullscreenDimensions</include>
	      <include>BackgroundFade</include>
        <texture>windows/bg/bokeh3.png</texture>
        <animation type="Conditional" condition="true" pulse="true" reversible="false">
          <effect type="fade" start="0" end="70" time="10350" delay="20700"/>
        </animation>
      </control>
    </control>
		<control type="image">
			<description>Global Single-Background</description>
			<include>FullscreenDimensions</include>
	    <include>BackgroundFade</include>
			<texture background="true">$INFO[Skin.String(CustomImageBackgroundPath)]</texture>
			<fadetime>500</fadetime>
			<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
			<description>Global Multi-Background</description>
			<include>FullscreenDimensions</include>
	    <include>FanartFade</include>
			<imagepath background="true">$INFO[Skin.String(CustomFolderBackgroundPath)]</imagepath>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
      <loop>yes</loop>
			<fadetime>500</fadetime>
			<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomFolderBackgroundPath)) + ![Skin.HasSetting(ShowCustomBackgroundOnHomeOnly) + !Window.IsVisible(Home)]</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="image">
			<description>HomeMenu Single-Background</description>
			<include>FullscreenDimensions</include>
	    <include>FanartFade</include>
			<texture background="true">$INFO[Container(20).ListItem.Property(Background)]</texture>
			<fadetime>500</fadetime>
      <visible>![SubString(Container(20).ListItem.Property(background),\,Right) | SubString(Container(20).ListItem.Property(background),/,Right)]</visible>
      <visible>![[StringCompare(Container(20).ListItem.Property(defaultID),weather) | Window.IsVisible(weather)] + [Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))]]</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
			<description>HomeMenu Multi-Background</description>
			<include>FullscreenDimensions</include>
	    <include>FanartFade</include>
			<imagepath background="true">$INFO[Container(20).ListItem.Property(Background)]</imagepath>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
      <loop>yes</loop>
			<fadetime>600</fadetime>
      <visible>SubString(Container(20).ListItem.Property(background),\,Right) | SubString(Container(20).ListItem.Property(background),/,Right)</visible>
      <visible>![[StringCompare(Container(20).ListItem.Property(defaultID),weather) | Window.IsVisible(weather)] + [Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))]]</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	 </control>
		<control type="videowindow">
			<description>Video</description>
			<include>FullscreenDimensions</include>
		  <visible>Player.HasVideo + !Skin.HasSetting(HideBGVideo)</visible>
		</control>
		<control type="visualisation">
			<posx>0</posx>
			<posy>0</posy>
			<width>1280</width>
			<height>720</height>
		  <visible>Player.HasAudio + !Skin.HasSetting(Vis-Visualization) + !SubString(Window(Videos).Property(TvTunesIsAlive),True)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="image">
	    <include>FullscreenDimensions</include>
	    <fadetime>1000</fadetime>
	    <texture background="true">$INFO[Player.Art(fanart)]</texture>
	    <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
		  <animation effect="fade" start="0" end="100" time="1000">Visible</animation>
		  <animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
		  <include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
	    <visible>Player.HasAudio + Skin.HasSetting(Vis-Fanart)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
	    <include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
      <loop>yes</loop>
			<fadetime>1000</fadetime>
	    <imagepath background="true">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</imagepath>
	    <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
		  <animation effect="fade" start="0" end="100" time="1000">Visible</animation>
		  <animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
		  <include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
	    <visible>Player.HasAudio + Skin.HasSetting(Vis-MusicSlideshow)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
			<aspectratio>keep</aspectratio>
	    <include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
      <loop>yes</loop>
			<fadetime>1000</fadetime>
			<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
			<animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
			<visible>Player.HasAudio + Skin.HasSetting(Vis-ArtistSlideshow) + IsEmpty(Window(Visualisation).Property(ArtistSlideshowRefresh))</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	  <include condition="[Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))]">BackgroundWeather</include>
	</include>

	<include name="GlobalFanart">
		<control type="image">
			<description>Global Fanart</description>
			<include>FullscreenDimensions</include>
      <texture background="true">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		  <visible>![Control.IsVisible(55) + !Window.IsActive(movieinformation)] + !Control.IsVisible(580)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="image">
			<description>Pictures Fanart</description>
		  <aspectratio align="center" aligny="top">scale</aspectratio>
			<include>FullscreenDimensions</include>
      <texture background="true">$INFO[ListItem.FileNameAndPath]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Window.IsVisible(Pictures) + Container.HasFiles</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="image">
			<description>TVGuide Fanart</description>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<texture background="true">$VAR[TVGuideFanart]</texture>
		  <visible>!Skin.HasSetting(HideTVGuideFanart)</visible>
      <animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	</include>

	<include name="HomeWidgetsFanart">
	  <control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[HomeWidgetsFanart]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
		<control type="image">
		  <description>Vignette</description>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_vignette.png</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
	</include>

	<include name="BackgroundVignette">
		<control type="image">
		  <description>Vignette</description>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_vignette.png</texture>
			<include>BackgroundFade</include>
<!--	<colordiffuse>FFCDCDCD</colordiffuse>
      <colordiffuse>D5FFFFFF</colordiffuse> -->
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
<!--  <colordiffuse>ddFFFFFF</colordiffuse> -->
			<visible>[Control.IsVisible(50) + !Window.IsVisible(weather) + !Window.IsVisible(musicplaylisteditor) + !Window.IsVisible(profiles)]
			| [Control.IsVisible(57) + !Window.IsVisible(profiles)]
			| Control.IsVisible(56)
			| Control.IsVisible(560)
			| Control.IsVisible(561)
			| Window.IsActive(PlayerControls)
			| Window.IsActive(shutdownmenu)
			| Window.IsActive(weather)
			| Window.IsActive(movieinformation)
			| Window.IsActive(musicinformation)
			| Window.IsActive(songinformation)
			| Window.IsActive(addoninformation)
			| [Window.IsActive(script-globalsearch-main.xml) + Skin.HasSetting(HideBGFanart)]
			| [Window.IsActive(script-Actors-DialogInfo.xml) + !Window.IsActive(movieinformation)]
			| [Window.IsActive(script-Actors-DialogVideoInfo.xml) + !Window.IsActive(movieinformation)]
			</visible>
	  </control>
	</include>

</includes>